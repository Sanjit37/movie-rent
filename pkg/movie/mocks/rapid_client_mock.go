// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/movie/clients/rapid/client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "movie-rent/pkg/movie/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRapidClient is a mock of RapidClient interface.
type MockRapidClient struct {
	ctrl     *gomock.Controller
	recorder *MockRapidClientMockRecorder
}

// MockRapidClientMockRecorder is the mock recorder for MockRapidClient.
type MockRapidClientMockRecorder struct {
	mock *MockRapidClient
}

// NewMockRapidClient creates a new mock instance.
func NewMockRapidClient(ctrl *gomock.Controller) *MockRapidClient {
	mock := &MockRapidClient{ctrl: ctrl}
	mock.recorder = &MockRapidClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRapidClient) EXPECT() *MockRapidClientMockRecorder {
	return m.recorder
}

// FetchAllMovies mocks base method.
func (m *MockRapidClient) FetchAllMovies() ([]model.Movie, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchAllMovies")
	ret0, _ := ret[0].([]model.Movie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchAllMovies indicates an expected call of FetchAllMovies.
func (mr *MockRapidClientMockRecorder) FetchAllMovies() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchAllMovies", reflect.TypeOf((*MockRapidClient)(nil).FetchAllMovies))
}
